#!/bin/bash
### BEGIN INIT INFO
# Provides: <%= @service_name %>
# chkconfig: 2345 90 05
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

EXEC_SCRIPT=/usr/bin/airflow
CMDNAME=`basename $0`
LOG_DIR=/var/log/airflow
PID_DIR=<%= @run_folder %>
PID_FILE="$PID_DIR/$CMDNAME.pid"
LOG_FILE="$LOG_DIR/$CMDNAME.log"
RUN_USER=<%= @user %>
AIRFLOW_HOME=<%= @home_folder %>


if ! grep "^$RUN_USER:" /etc/passwd > /dev/null
then
  echo "no user : $RUN_USER"
  exit
fi

# Source function library.
. /etc/init.d/functions

test -d $LOG_DIR || mkdir $LOG_DIR; chmod -R 777 $LOG_DIR

RETVAL=0

case "$1" in
    start)
        if [ ! -f "$PID_FILE" ]; then
          echo -n "Starting $CMDNAME"
          sudo -u $RUN_USER AIRFLOW_HOME=$AIRFLOW_HOME nohup $EXEC_SCRIPT <%= @command %> 0<&- &> $LOG_FILE &
          # Grab the pid in this way to get ancestore pid for webserver
          ps aux | grep "nohup $EXEC_SCRIPT <%= @command %>" | grep -v grep | awk '{ print $2 }' > $PID_FILE
          success
        else
          echo -n "$CMDNAME is already running"
          RETVAL=1
          failure
        fi
        echo
        ;;
    stop)
        if [ -f "$PID_FILE" ]; then
          echo -n "Stopping $CMDNAME"
          killproc -p $PID_FILE -TERM >/dev/null 2>&1
          success
        else
          echo -n "$CMDNAME is not running"
          RETVAL=1
          failure
        fi
        echo
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    status)
        status -p $PID_FILE $CMDNAME
        RETVAL=$?
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|reload}"
        exit 1
        ;;
esac

exit $RETVAL
